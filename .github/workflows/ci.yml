name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ruff:
    name: Ruff (Python linting & formatting)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Lint with Ruff
      uses: astral-sh/ruff-action@v3
      with:
        src: "."
        args: "check --output-format=github"

    - name: Check formatting with Ruff
      uses: astral-sh/ruff-action@v3
      with:
        src: "."
        args: "format --check"

  mypy:
    name: MyPy (Python type checking)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Type check with MyPy
      run: uv run mypy poor_installer_web/*.py

  shellcheck:
    name: ShellCheck (Shell script linting)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Lint shell scripts with ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        check_together: 'yes'

  hadolint:
    name: Hadolint (Dockerfile linting)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Lint Dockerfile with hadolint
      uses: hadolint/hadolint-action@v3.3.0
      with:
        dockerfile: Dockerfile
        failure-threshold: error

  test:
    name: Pytest (Python testing)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Test with pytest
      run: uv run pytest tests/ -v
