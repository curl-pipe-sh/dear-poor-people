#!/usr/bin/env sh
# description: minimal interactive TTY bridge (like socat)
# icon: mdi:transit-connection-variant
# poorcat.sh â€” minimal interactive TTY bridge (like socat)

usage() {
  cat <<USAGE >&2
Usage: poorsocat DEVICE [BAUD]

A minimal interactive TTY bridge for serial communication.

Arguments:
  DEVICE    Serial device (e.g., /dev/ttyUSB0, /dev/ttyACM0)
  BAUD      Baud rate (default: 115200)

Options:
  -h, --help    Show this help message

Examples:
  poorsocat /dev/ttyUSB0           # Connect to USB serial at 115200 baud
  poorsocat /dev/ttyACM0 9600      # Connect to Arduino at 9600 baud
  poorsocat /dev/ttyS0 38400       # Connect to serial port at 38400 baud

Note: You may need appropriate permissions to access serial devices.
      Try adding your user to the 'dialout' group: sudo usermod -a -G dialout \$USER
USAGE
}

# Parse arguments
case "${1:-}" in
  -h|--help)
    usage
    exit 0
    ;;
  "")
    echo "Error: DEVICE argument required" >&2
    echo "Usage: poorsocat DEVICE [BAUD]" >&2
    echo "A minimal interactive TTY bridge for serial communication." >&2
    usage
    exit 2
    ;;
esac

DEVICE="$1"
BAUD="${2:-115200}"

# Configure TTY (ignore errors if unsupported)
stty -F "$DEVICE" "$BAUD" -echo -icanon 2>/dev/null || \
stty "$BAUD" -echo -icanon 2>/dev/null < "$DEVICE" || true

# Start background reader
cat < "$DEVICE" &
READER_PID=$!

cleanup() {
  kill "$READER_PID" 2>/dev/null
}
trap cleanup EXIT INT TERM

# Main loop: read from stdin, write to device
while IFS= read -r line
do
  # send line with CR
  printf '%s\r' "$line" > "$DEVICE"
done
